<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WrapSQLBase</name>
    </assembly>
    <members>
        <member name="T:WrapSQL.WrapSQLBase">
            <summary>
            WrapSQL base class.
            </summary>
        </member>
        <member name="F:WrapSQL.WrapSQLBase.transactionActive">
            <summary>
            Flag to check if a transaction is currently active
            </summary>
        </member>
        <member name="F:WrapSQL.WrapSQLBase.connection">
            <summary>
            Database connection
            </summary>
        </member>
        <member name="F:WrapSQL.WrapSQLBase.transaction">
            <summary>
            Database transaction
            </summary>
        </member>
        <member name="P:WrapSQL.WrapSQLBase.Connection">
            <summary>
            SQL-Connection object.
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.Open">
            <summary>
            Opens the SQL-connection, if the connection is closed
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.Close">
            <summary>
            Closes the SQL-Connection, if the connection is open.
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.TransactionBegin">
            <summary>
            Starts a transaction.
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.TransactionCommit">
            <summary>
            Commits a transaction.
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.TransactionRollback">
            <summary>
            Terminates a transaction.
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteNonQuery(System.String,System.Boolean,System.Object[])">
            <summary>
            Executes a non-query statement. 
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="aCon">Manage connection states (AutoConnect)</param>
            <param name="parameters">Query-parameters</param>
            <returns>NonQuery result</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes a non-query statement. 
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>NonQuery result</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteNonQueryACon(System.String,System.Object[])">
            <summary>
            Executes a non-query statement. 
            Automatically opens and closes the connection.
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>NonQuery result</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteScalar``1(System.String,System.Boolean,System.Object[])">
            <summary>
            Executes a execute-scalar statement.
            </summary>
            <typeparam name="T">Target-datatype of the result</typeparam>
            <param name="sqlQuery">SQL-query</param>
            <param name="aCon">Manage connection states (AutoConnect)</param>
            <param name="parameters">Query-parameters</param>
            <returns>Result of the scalar-query</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes a execute-scalar statement. 
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>Result of the scalar-query</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteScalarACon(System.String,System.Object[])">
            <summary>
            Executes a execute-scalar statement. 
            Automatically opens and closes the connection.
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>Result of the scalar-query</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteScalar``1(System.String,System.Object[])">
            <summary>
            Executes a execute-scalar statement. 
            </summary>
            <typeparam name="T">Target-datatype of the result</typeparam>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>Result of the scalar-query</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteScalarACon``1(System.String,System.Object[])">
            <summary>
            Executes a execute-scalar statement.
            Automatically opens and closes the connection.
            </summary>
            <typeparam name="T">Target-datatype of the result</typeparam>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>Result of the scalar-query</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.ExecuteQuery(System.String,System.Object[])">
            <summary>
            Executes a query-statement.
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>DataReader fetching the query-results</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.CreateDataTable(System.String,System.Object[])">
            <summary>
            Creates a DataTable with the results of a query-statement.
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>Results of a query-statement</returns>
        </member>
        <member name="M:WrapSQL.WrapSQLBase.GetDataAdapter(System.String,System.Object[])">
            <summary>
            Creates a DataAdapter on the given query-statement.
            </summary>
            <param name="sqlQuery">SQL-query</param>
            <param name="parameters">Query-parameters</param>
            <returns>DataAdapter of the given query-statement</returns>
        </member>
        <member name="T:WrapSQL.WrapSQLException">
            <summary>
            Exception-Class for WrapSQL. Internal use only.
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLException.#ctor">
            <summary>
            Creates a new WrapSQL-Exception
            </summary>
        </member>
        <member name="M:WrapSQL.WrapSQLException.#ctor(System.String)">
            <summary>
            Creates a new WrapSQL-Exception
            </summary>
            <param name="message">Exception-message</param>
        </member>
        <member name="M:WrapSQL.WrapSQLException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new WrapSQL-Exception
            </summary>
            <param name="message">Exception-message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:WrapSQL.WrapSQLException.MessageFormat(System.String)">
            <summary>
            Formats the given message and adds a custom exception-header.
            </summary>
            <param name="message">Exception-message</param>
            <returns>Formated exception message</returns>
        </member>
    </members>
</doc>
